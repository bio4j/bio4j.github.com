<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Releases | bio4j]]></title>
  <link href="http://bio4j.com/blog/categories/releases/atom.xml" rel="self"/>
  <link href="http://bio4j.com/"/>
  <updated>2015-02-19T15:40:00+01:00</updated>
  <id>http://bio4j.com/</id>
  <author>
    <name><![CDATA[oh no sequences!]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bio4j 0.9 the billion relationships are here!]]></title>
    <link href="http://bio4j.com/blog/2013/10/bio4j-09-the-billion-relationships-is-here/"/>
    <updated>2013-10-15T06:33:27+02:00</updated>
    <id>http://bio4j.com/blog/2013/10/bio4j-09-the-billion-relationships-is-here</id>
    <content type="html"><![CDATA[<p>Hi everyone!</p>

<p>So <a href="https://github.com/bio4j/Bio4j/wiki/Bio4j-0.9"><strong>Bio4j 0.9</strong></a> finally made its way out and it’s here bringing you more than 1 billion relationships. These are approximately its main numbers:</p>

<ul>
  <li><strong>1.216.993.547</strong> relationships</li>
  <li><strong>190.625.351</strong> nodes</li>
  <li><strong>584.436.429</strong> properties</li>
</ul>

<p>A lot of new features and improvements have been incorporated including the following, <em>(I will go into more detail in later posts specifically dedicated to each of them)</em></p>

<h2 id="refurbishing-the-domain-model">Refurbishing the domain model</h2>

<p><img src="http://bio4j.com/images/domainModelThumbnail.png" style="float:right" />We have introduced a new level of abstraction for the domain model by decoupling the inner database implementation from the relationships among entities themselves. An interface has been developed for each node and relationship present in the database, including methods to access both the properties of the entity it represents and utility methods that allow to easily navigate to the entities that will be linked to it. 
All this can be found under the package <em>com.era7.bioinfo.bio4j.model</em></p>

<h2 id="new-blueprints-layer">New Blueprints layer</h2>

<p><img src="http://bio4j.com/images/blueprints.png" style="float:left" /> Apart from the set of interfaces we’ve developed another layer for the domain model using <a href="http://blueprints.tinkerpop.com/"><strong>Blueprints</strong></a>. This way we’re going one step further for making the domain model independent from the choice of database technology.</p>

<h2 id="new-titan-implementation">New Titan implementation</h2>

<p><img src="http://bio4j.com/images/titan.png" style="float:right" /> After the problems we had with the so called <a href="http://thinkaurelius.com/2012/10/25/a-solution-to-the-supernode-problem/"><em><strong>supernodes</strong></em></a> - which are quite common indeed, we decided to give a try to <a href="http://thinkaurelius.github.io/titan/"><strong>Titan Graph Database</strong></a> technology and see how it behaves in such situation. Both wrapper classes for each entity and importing programs have already been implemented. This new prototype needs however some testing but be sure you’ll be hearing more about this pretty soon! ;)</p>

<h2 id="bye-bye-reference-node">Bye bye reference node</h2>

<p>We decided to finally stop using the reference node for indexing purposes <em>(actually there’s no use for it anymore in Bio4j)</em>. 
I have to admit it, I never was a fan of it and it was about time to do it. So now auxiliary relationships such as, for instance, <em>MainTaxonRel</em> or <em>MainDatasetRel</em> have been replaced by a standard node index.</p>

<h2 id="bug-fixes">Bug fixes</h2>

<p>This new release comes with many fixes including:</p>

<ol>
  <li><strong>EnzymeNode</strong>: The node type property was not stored in previous releases.</li>
  <li><strong>DatasetNode</strong>: Name property was not properly indexed. </li>
  <li><strong>OrganismNode</strong>: NCBI tax-id property was not stored in some scenarios.</li>
  <li>Redundant sequence conflict feature relationships have been fixed.</li>
  <li>Duplicated submissions fixed</li>
  <li>ProteinUnpublishedObservationCitation relationship was missing</li>
  <li>The following node types were not properly indexed by their type till now: <em>BookNode, ArticleNode, OnlineArticleNode, SubmissionNode, PatentNode, PublisherNode, OnlineJournalNode, JournalNode</em></li>
</ol>

<h2 id="java-7">Java 7</h2>

<p>Bio4j uses Java 7 now ;)</p>

<p>OK, so that’s all for now, I’ll be posting much more information about this new release soon.</p>

<p>Cheers!</p>

<p><a href="http://twitter.com/pablopareja"><strong>@pablopareja</strong></a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bio4j 0.8, some numbers]]></title>
    <link href="http://bio4j.com/blog/2012/10/bio4j-0-8-some-numbers/"/>
    <updated>2012-10-18T06:33:27+02:00</updated>
    <id>http://bio4j.com/blog/2012/10/bio4j-0-8-some-numbers</id>
    <content type="html"><![CDATA[<p>Hi everyone!</p>

<p>Bio4j 0.8 was recently released and now it’s time to have a deeper look at its numbers <em>(as you can see we are quickly approaching the 1 billion relationships and 100M nodes)</em>:</p>

<ul>
  <li>Number of Relationships: <strong>717.484.649</strong></li>
  <li>Number of Nodes: <strong>92.667.745</strong></li>
  <li>Relationship types: <strong>144</strong></li>
  <li>Node types: <strong>42</strong></li>
</ul>

<p>Ok, but how are those relationships and nodes distributed among the different types?  In this chart you can see the <strong>first 20 Relationship types</strong>:</p>

<p><a href="/images/bio4j08first20RelTypes.png"><img src="/images/bio4j08first20RelTypes.png"></a></p>

<p>Here, the same thing but for the <strong>first 20 Node types</strong>:</p>

<p><a href="/images/bio4j08first20NodeTypes.png"><img src="/images/bio4j08first20NodeTypes.png"></a></p>

<p>You can also check these two files including the numbers for all the existing types:</p>

<ul>
  <li><a href="https://s3-eu-west-1.amazonaws.com/bio4j-public/releases/0.8/statistics/Bio4j08NodeStatistics.txt">Node statistics</a></li>
  <li><a href="https://s3-eu-west-1.amazonaws.com/bio4j-public/releases/0.8/statistics/Bio4j08RelStatistics.txt">Relationship statiscis</a></li>
</ul>

<p>All this data was obtained with the program <a href="https://github.com/bio4j/Bio4jTools/blob/master/src/com/era7/bioinfo/bio4j/tools/GetNodeAndRelsStatistics.java"><strong>GetNodeAndRelsStatistics</strong></a>.</p>

<p>Have a good weekend!</p>

<p><a href="http://twitter.com/pablopareja"><strong>@pablopareja</strong></a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bio4j 0.8 is here!]]></title>
    <link href="http://bio4j.com/blog/2012/09/bio4j-0-8-is-here/"/>
    <updated>2012-09-22T18:50:52+02:00</updated>
    <id>http://bio4j.com/blog/2012/09/bio4j-0-8-is-here</id>
    <content type="html"><![CDATA[<p>Hi everyone!</p>

<p>I’m glad to announce the release of <a href="https://github.com/bio4j/Bio4j/wiki/Bio4j-0.8"><strong>Bio4j 0.8</strong></a> including more than <strong>5.488.000 new proteins</strong> and <strong>3.233.000 genes</strong> among others,  plus the following improvements and features:</p>

<h2 id="pfam-families">Pfam families</h2>

<p>Bio4j includes now all Pfam families included in Uniprot KB (both Swiss-Prot and TrEMBL). For that, both a new node type and relationship type have been created: </p>

<ul>
  <li>
    <p><a href="http://www.bio4j.com/docs/bio4j/apidocs/com/era7/bioinfo/bio4j/model/nodes/PfamNode.html">PfamNode</a></p>
  </li>
  <li>
    <p><a href="http://www.bio4j.com/docs/bio4j/apidocs/com/era7/bioinfo/bio4j/model/relationships/protein/ProteinPfamRel.html">ProteinPfamRel</a> (this relationship connects a protein and the respective Pfam families associated to it)</p>
  </li>
</ul>

<p>The following properties have been added to the Pfam node including:</p>

<ul>
  <li>ID</li>
  <li>Name</li>
</ul>

<p>Besides, an exact index for the Pfam family ID property has also been created <em>( pfam_id_index ).</em></p>

<h2 id="ncbi-taxonomy-tree-gi-index-improved">NCBI taxonomy tree GI index improved</h2>

<p>Old merged node IDs have been incorporated to the Gene Identifier &lt;–&gt; Taxonomy units index. That means that now all the pairs GI-TaxID which included old merged Tax-ID are also part of the index, resulting on a higher rate of hits when using the index.
For that we used the file <strong>meged.dmp</strong> provided in the <a href="ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz">official tax dump file</a> provided by the NCBI.</p>

<h2 id="bio4j-and-bio4jmodel-projects-unification">Bio4j and Bio4jModel projects unification</h2>

<p><a href="https://github.com/bio4j/Bio4j">Bio4j</a> project has absorbed <a href="https://github.com/bio4j/Bio4jModel">Bio4jModel</a> project from this release on.</p>

<p>Until now, Bio4jModel library included the core classes for the manipulation and traversal of the graph while Bio4j project only included the importing programs. I’ve been thinking for a while that this could be confusing and, since there was no real need to keep them as independent projects, I decided to put it all under Bio4j <em>(you just need one jar file now ;) ).</em> </p>

<h2 id="new-script-for-the-importing-process">New script for the importing process</h2>

<p>You don’t have to worry anymore about manually downloading/decompressing/etc… the sources for the DB in case you want to import Bio4j in your own cluster/machine. Just run the script <strong><a href="https://github.com/bio4j/Bio4j/blob/master/DownloadAndPrepareBio4jSources.sh">DownloadAndPrepareBio4jSources.sh</a></strong> and it will do it all for you.</p>

<h2 id="bug-fixes">Bug fixes</h2>

<ol>
  <li><strong>MetalIonBindingSiteFeature</strong> This feature relationship had an erroneous name assigned and it’s been fixed.</li>
</ol>

<p>Well, that’s all for now, I’ll be posting more information about this new release soon ;)</p>

<p>Cheers,</p>

<p><a href="http://www.twitter.com/pablopareja"><strong>@pablopareja</strong></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bio4j 0.7, some numbers]]></title>
    <link href="http://bio4j.com/blog/2012/03/bio4j-0-7-some-numbers/"/>
    <updated>2012-03-05T13:28:27+01:00</updated>
    <id>http://bio4j.com/blog/2012/03/bio4j-0-7-some-numbers</id>
    <content type="html"><![CDATA[<p>Hi everyone!</p>

<p>There have already been a good few posts showing different uses and applications of Bio4j, but what about Bio4j data itself?
Today I’m going to show you some <strong>basic statistics</strong> about the different types of nodes and relationships Bio4j is made up of.
Just as a heads up, here are the <strong>general numbers of Bio4j 0.7</strong> :</p>

<ul>
  <li>Number of Relationships: <strong>530.642.683</strong></li>
  <li>Number of Nodes: <strong>76.071.411</strong></li>
  <li>Relationship types: <strong>139</strong></li>
  <li>Node types: <strong>38</strong></li>
</ul>

<p>Ok, but how are those relationships and nodes distributed among the different types?  In this chart you can see the <strong>first 20 Relationship types</strong> (click on the image below to check the interactive chart):</p>

<p><a href="http://bio4j.com/imgs/release07/relsBarChart.html"><img src="/images/first20RelTypesChart-1024x797.png"></a></p>

<p>Here, the same thing but for the <strong>first 20 Node types</strong> (click on the image below to check the interactive chart):</p>

<p><a href="http://bio4j.com/imgs/release07/nodesBarChart.html"><img src="/images/first20NodeTypesChart-1024x794.png"></a></p>

<p>You can also check these two files including the numbers from all existing types:</p>

<ul>
  <li><a href="https://s3-eu-west-1.amazonaws.com/bio4j-public/releases/0.7/statistics/Bio4j07NodeStatistics.txt">Node statistics</a></li>
  <li><a href="https://s3-eu-west-1.amazonaws.com/bio4j-public/releases/0.7/statistics/Bio4j07RelStatistics.txt">Relationship statiscis</a></li>
</ul>

<p>All this data was obtained with the program <a href="https://github.com/bio4j/Bio4jTools/blob/develop/src/com/era7/bioinfo/bio4j/tools/GetNodeAndRelsStatistics.java"><strong>GetNodeAndRelsStatistics</strong></a>.</p>

<p>Have a good day!</p>

<p><a href="http://twitter.com/pablopareja"><strong>@pablopareja</strong></a></p>

<h2 id="comments">comments</h2>

<ul>
  <li>
    <p><strong>Patrick Durusau</strong>
Excellent!
Question: When I checked at PubMed, I did not find Neo4j cited in any of the medical literature. I am not a medical professional but am interested in what might promote Bio4j in the medical research community?
It is too good of a resource to be unnoticed.
Patrick</p>

    <ul>
      <li><strong>ppareja</strong>
Hi Patrick,
I’m glad you liked the post.
It’s true that Bio4j may not have caught the attention of many people yet who could definitely make a good use out of it. What are the reasons for that? Well, I think it could be a mixture of factors.
Some people don’t like too much learning new technologies/strategies/workflows… and tend to stick to things they already know as long as possible – which is totally respectable and undestandable. Other people though, may simply not have found about it yet… It’s also possible that due to the lack of a well structured project documentation, potential users get lost in their way when trying to figure out what’s Bio4j about and/or miss the parts they could be interested in.
I could keep on going with more possible reasons that are coming to my mind but still, couldn’t be really objective – it’s me who created this project  :D
The point you bring up is actually one of the reasons why we value so much any sort of feedback for the project, (specially constructive ‘bad’ feedback that help us realize its weaknesses)
Let me know if you come up with an idea to let more people know about Bio4j !
Pablo</li>
    </ul>
  </li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bio4j release 0.7 is out!]]></title>
    <link href="http://bio4j.com/blog/2012/01/bio4j-release-0-7-is-out/"/>
    <updated>2012-01-11T17:50:52+01:00</updated>
    <id>http://bio4j.com/blog/2012/01/bio4j-release-0-7-is-out</id>
    <content type="html"><![CDATA[<p>Hi!</p>

<p>I’m happy to announce that the version 0.7 of Bio4j has been released. Check out the wide set of new features, tools and improvements:</p>

<h2 id="expasy-enzyme-database-integration">Expasy Enzyme database integration</h2>

<p>From now on you have the whole <a href="http://enzyme.expasy.org"><strong>Enzyme DB</strong></a> included in Bio4j. For that, both a new node type and relationship type have been created: </p>

<ul>
  <li><a href="http://www.bio4j.com/docs/bio4jmodel/apidocs/com/era7/bioinfo/bio4jmodel/nodes/EnzymeNode.html">EnzymeNode</a>
-<a href="http://www.bio4j.com/docs/bio4jmodel/apidocs/com/era7/bioinfo/bio4jmodel/relationships/protein/ProteinEnzymaticActivityRel.html">ProteinEnzymaticActivityRel</a> (this relationship connects a protein and the respective enzyme nodes associated to it)</li>
</ul>

<p>All properties found have been incorporated to the enzyme node including:</p>

<ul>
  <li>ID</li>
  <li>Official name</li>
  <li>Alternate names</li>
  <li>Cofactors</li>
  <li>Comments</li>
  <li>Catalytic activity</li>
  <li>Prosite cross-references</li>
</ul>

<h2 id="node-type-indexing">Node type indexing</h2>

<p>From now on, every node present in the database has a property <em><strong>nodeType</strong></em> including its type which has been indexed. That way you can now access all nodes belonging to an specific type really easily. </p>

<h2 id="availability-in-all-regions">Availability in all Regions</h2>

<p><a href="http://aws.amazon.com"><img class="right" src="http://d36cz9buwru1tt.cloudfront.net/logo_aws.gif"></a></p>

<p>The AWS region you are based in won’t be a problem for using Bio4j anymore. EBS Snapshots have been created in all regions as well as CloudFormation templates have been updated so that they can now be used regardless the region where you want to create the stack. </p>

<blockquote>
  <p>Only Asia Pacific (Singapore) <code>ap-southeast-1</code> region is not ready due to ongoing issues from AWS side regarding extremely slow S3 object downloading. Hope we can find a work around for this soon!</p>
</blockquote>

<h2 id="new-cloudformation-templates">New CloudFormation templates</h2>

<h3 id="basic-bio4j-instance-updated">Basic Bio4j instance (updated)</h3>

<p>The basic Bio4j instance template has been updated so that now you can use it from all zones. Check out more info about this in the <a href="http://blog.bio4j.com/2011/12/bio4j-aws-cloudformation-your-own-fresh-baked-db-in-less-than-a-minute/"><strong>updated blog post</strong></a></p>

<h3 id="basic-bio4j-rest-server">Basic Bio4j REST server</h3>

<p>A new template has been developed so that you can easily deploy your Neo4j-Bio4j REST server in less than a minute.</p>

<p>This template is available in the following address:</p>

<ul>
  <li><a href="https://s3-eu-west-1.amazonaws.com/bio4j-public/Bio4jBasicRestServerTemplate.txt"><strong>https://s3-eu-west-1.amazonaws.com/bio4j-public/Bio4jBasicRestServerTemplate.txt</strong></a></li>
</ul>

<p>The steps you should follow to create the stack are really simple. Actually, you can follow as a guide <a href="http://blog.ohnosequences.com/2011/12/neo4j-server-and-aws-become-good-friends/"><strong>this blog post</strong></a> about the template I created for deploying a general Neo4j server, <em>only one or two parameters vary</em></p>

<h2 id="bio4j-rest-server">Bio4j REST server</h2>

<p>Once you get your server running thanks to the useful template I just mentioned before, using Neo4j WebAdmin with Bio4j as source you will be able to:</p>

<h3 id="explore-you-database-with-the-data-browser">Explore you database with the Data browser</h3>

<p>Using the data browser tab of the Web administration tool you can explore in real-time the contents of Bio4j!</p>

<p><img src="/images/Bio4jDataBrowser-1024x699.png"></p>

<p>In order to get visualizations like the one shown above, you should make use of <strong>visualization profiles</strong>. There you can specify different styles associated to customizable rules which can be expressed in terms of the node properties. Here’s a screenshot showing how the visualization profile I used for the visualization above looks like:</p>

<p><img src="/images/Bio4jDataBrowserVizProfile-1024x752.png"></p>

<blockquote>
  <p>Just beware of one thing, the behavior of the tool is such that it does not distinguish between highly connected nodes and more isolated ones. Because of this, clicking nodes such as <strong>Trembl</strong> dataset node is not advisable unless you want to see it freeze forever -<em>this node has more than 15 million relationships linking it to proteins</em>.</p>
</blockquote>

<h2 id="run-queries-with-cypher">Run queries with Cypher</h2>

<p>Cypher what?!</p>

<blockquote>
  <p><a href="http://docs.neo4j.org/chunked/milestone/cypher-query-lang.html"><img class="right" src="http://a1.twimg.com/profile_images/195275920/square-logo-no-text-2_normal.png"></a>
<strong>Cypher **is a **declarative language</strong> which allows for expressive and efficient querying of the graph store without having to write traversers in code. It <strong>focuses on the clarity of expressing what to retrieve</strong> from a graph, <strong>not how to do it</strong>, in contrast to imperative languages like Java, and scripting languages like Gremlin.</p>
</blockquote>

<p>A query to retrieve protein interaction circuits of length 3 with proteins belonging to Swiss-Prot dataset (limited to 5 results) would look like this in Cypher:</p>

<p><code>
START d=node:dataset_name_index(dataset_name_index = "Swiss-Prot")
 MATCH d &lt;-[r:PROTEIN_DATASET]- p, 
 circuit = (p) -[:PROTEIN_PROTEIN_INTERACTION]-&gt; (p2) -[:PROTEIN_PROTEIN_INTERACTION]-&gt; (p3) -[:PROTEIN_PROTEIN_INTERACTION]-&gt; (p)
 return p.accession, p2.accession, p3.accession, p.accession
 limit 5
</code></p>

<p>If you want to check out more examples of Bio4j + Cypher, check our <a href="https://github.com/bio4j/Bio4j/wiki/Bio4j-cypher-cheat-sheet"><strong>Bio4j cypher cheat sheet</strong></a> that we will be updating from time to time.</p>

<h2 id="querying-bio4j-with-gremlin">Querying Bio4j with Gremlin</h2>

<p>Gremlins? What do they have to do with Bio4j!?</p>

<blockquote>
  <p><a href="https://github.com/tinkerpop/gremlin/wiki"><img class="right" src="https://raw.github.com/tinkerpop/gremlin/master/doc/images/gremlin-standing-small.png"></a>
<strong>Gremlin is a graph traversal language that can be natively used in various JVM languages</strong> - it currently provides native support for Java, Groovy, and Scala. However, it can express in a few lines of code what it would take many, many lines of code in Java to express.</p>
</blockquote>

<p>Querying proteins associated to the interpro motif with id <code>IPR023306</code> in Bio4j with Gremlin would look like this: (limited to 5 results)</p>

<p><code>
gremlin&gt; g.idx('interpro_id_index')[['interpro_id_index':'IPR023306']].inE('PROTEIN_INTERPRO').outV.accession[0..4]
==&gt; E2GK26
==&gt; G3PMS4
==&gt; G3Q865
==&gt; G3PIL8
==&gt; G3NNA4
gremlin&gt; 
</code></p>

<p>If you want to check out more examples of Bio4j + Gremlin, check our <a href="https://github.com/bio4j/Bio4j/wiki/Bio4j-gremlin-cheat-sheet"><strong>Bio4j gremlin cheat sheet</strong></a> that we will be updating from time to time.</p>

<h2 id="bug-fixes">Bug fixes</h2>

<ol>
  <li><strong>Dataset nodes</strong> There was a bug in the importing process which resulted in the creation of a new dataset node everytime a new Uniprot entry was stored. Now everything’s fine!</li>
</ol>

<p>So that’s all for now! Hope you enjoy all this changes and new features I’ve been working on in the last couple of months. As always, feel free to give any feedback you may have, I’m looking forward to it ;)</p>

<p><a href="http://www.twitter.com/pablopareja"><strong>@pablopareja</strong></a></p>
]]></content>
  </entry>
  
</feed>
