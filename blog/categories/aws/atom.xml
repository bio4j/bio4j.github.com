<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AWS | bio4j]]></title>
  <link href="http://bio4j.com/blog/categories/aws/atom.xml" rel="self"/>
  <link href="http://bio4j.com/"/>
  <updated>2015-02-19T15:40:00+01:00</updated>
  <id>http://bio4j.com/</id>
  <author>
    <name><![CDATA[oh no sequences!]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bio4j REST Server configures itself now thanks to the updated CF template]]></title>
    <link href="http://bio4j.com/blog/2012/02/bio4j-rest-server-configures-itself-now-thanks-to-the-updated-cf-template/"/>
    <updated>2012-02-24T14:21:39+01:00</updated>
    <id>http://bio4j.com/blog/2012/02/bio4j-rest-server-configures-itself-now-thanks-to-the-updated-cf-template</id>
    <content type="html"><![CDATA[<p>Hi all,</p>

<p>I just wanted to write a very short post informing about the changes in the <a href="https://s3-eu-west-1.amazonaws.com/bio4j-public/Bio4jBasicRestServerTemplate.txt"><strong>Bio4jBasicRestServerTemplate</strong></a>. </p>

<blockquote>
  <p>Template what!? </p>
</blockquote>

<p>If that’s what you’re thinking, please go <a href="http://blog.ohnosequences.com/2011/12/neo4j-server-and-aws-become-good-friends/">here</a> to get an idea of what’s this all about.</p>

<p>From now on, this CloudFormation template adapts the server configuration files:</p>

<ul>
  <li><code>neo4j-wrapper.conf</code></li>
  <li><code>neo4j.properties</code></li>
</ul>

<p>to the characteristics of the instance type the server is running in, so that it can make the best out of it.</p>

<blockquote>
  <p>These configurations assume that the server is running alone in the machine.</p>
</blockquote>

<p>For that I created these two new mappings in the template:</p>

<ul>
  <li><code>AWSInstanceType2WrapperConfFile</code></li>
  <li><code>AWSInstanceType2Neo4jPropertiesFile</code></li>
</ul>

<p>Default configuration values are available in the <strong>bio4j-public S3 bucket</strong>. For example in order to have access to the server configuration files of a <code>m1.xlarge</code> instance, just go to this url:</p>

<ul>
  <li><a href="https://s3-eu-west-1.amazonaws.com/bio4j-public/server/conf-files/m1.xlarge/neo4j-wrapper.conf">neo4j-wrapper.conf - m1.xlarge</a></li>
</ul>

<p>same thing for the other file:</p>

<ul>
  <li><a href="https://s3-eu-west-1.amazonaws.com/bio4j-public/server/conf-files/m1.xlarge/neo4j.properties">neo4j.properties - m1.xlarge</a></li>
</ul>

<p>If you want to check the conf files for any other instance type, you just have to change the <strong>instance type name</strong> in the urls linked above.</p>

<p>Have a good weekend!</p>

<p><strong><a href="http://www.twitter.com/pablopareja">@pablopareja</a></strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bio4j + AWS CloudFormation = your own fresh baked DB in less than a minute!]]></title>
    <link href="http://bio4j.com/blog/2011/12/bio4j-aws-cloudformation-your-own-fresh-baked-db-in-less-than-a-minute/"/>
    <updated>2011-12-08T17:37:17+01:00</updated>
    <id>http://bio4j.com/blog/2011/12/bio4j-aws-cloudformation-your-own-fresh-baked-db-in-less-than-a-minute</id>
    <content type="html"><![CDATA[<p><strong>UPDATE:</strong> You can now use this template from **all zones but <code>ap-southeast-1</code>! **</p>

<p>Hi!</p>

<p>So this week it was time to finally start using <strong><a href="http://aws.amazon.com/cloudformation/">CloudFormation</a></strong> together with Bio4j. For those not familiar with this <strong><a href="http://aws.amazon.com/">AWS</a></strong> service, quoting from their site: </p>

<blockquote>
  <p>AWS CloudFormation gives developers and systems administrators an easy way to create and manage a collection of related AWS resources, provisioning and updating them in an orderly and predictable fashion.</p>
</blockquote>

<p>This is really useful because thanks to CloudFormation templates, you don’t have to worry about manually launching an instance, create a volume, attach it, do some stuff, and then free the resources… <strong>You can encapsulate all this tasks in a template</strong> reducing all the tasks to <strong>just two</strong>: </p>

<ol>
  <li>**create **the stack</li>
  <li>**delete **the satck whenever you are done with it</li>
</ol>

<p>This template is available in the following address:</p>

<ul>
  <li><a href="https://s3-eu-west-1.amazonaws.com/bio4j-public/Bio4jBasicInstanceTemplate.txt"><strong>Bio4jBasicInstanceTemplate.txt</strong></a></li>
</ul>

<p>So, let’s see how easy it actually is to create your stack. First you should go to the <code>CloudFormation</code> tab in the amazon console and click the button: <code>Create New Stack</code>:</p>

<p><img src="/images/CloudFormationCreateStackScreenShot.jpg"></p>

<p>You will see this new window now where you should choose the option <strong>Provide a template URL’</strong> and paste there the URL I just provided before. You should also give your stack a name filling the field <code>Stack name</code>. Then click <code>Continue</code>.</p>

<p><img src="/images/CreateStackSecondStepScreenShot.jpg"></p>

<p>Ok, now you should be seeing this:</p>

<p><img src="/images/CreateStackThirdStepScreenShot1.jpg"></p>

<p>Provide then your key-pair name, availability zone, and finally enter the type of instance you want to launch.
Once you clicked continue you’ll see a review of all the parameters you entered so far like:</p>

<p><img src="/images/CreateStackFourthStepScreenShot1.jpg"></p>

<p>Check everything is as you wish and click continue.
You should be seeing then something like this:</p>

<p><img src="/images/CreateStackFifthStepScreenShot.jpg"></p>

<p>Now you just have to wait for about 30 seconds until after refreshing the stack state changes to green color and says “CREATE_COMPLETE”. Click on the output tab and you will see the IP address you need to connect with SSH to your new instance.</p>

<p><img src="/images/CreateStackSixthStepScreenShot.jpg"></p>

<p>So now you just have to connect to your instance and you should have your fresh backed Bio4j DB under the folder <code>/mnt/bio4j_volume/bio4jdb</code> ;)</p>

<p>Whenever you are done, just select delete stack in the amazon console and don’t worry about terminating your instance or deleting your volume, they will do it for you!</p>

<blockquote>
  <p>The only thing you have to do is umount the volumes you have attached, it seems that CloudFormation cannot do that for you right now…</p>
</blockquote>

<p><a href="http://www.twitter.com/pablopareja"><strong>@pablopareja</strong></a></p>
]]></content>
  </entry>
  
</feed>
